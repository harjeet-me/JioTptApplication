

entity CompanyProfile {
    active Boolean,
	company String,	
    address String,
    streetAddress String,
    city String,
	stateProvince String,
    country CountryEnum,
	postalCode String ,
    email String, 
    website String,
 	phoneNumber Long,    
    dot String ,
    mc Long ,
    companyLogo ImageBlob ,
    profileStatus ToggleStatus ,
    preffredCurrency CURRENCY 
   
   }

entity Customer {
	
    company String,
	firstName String,
	lastName String,
    contactDesignation Designation ,
	email String,    
 	phoneNumber Long,
    preffredContactType PreffredContactType,
    website String,    
    secondaryContactPerson String,
    secContactNumber Long,
    secContactEmail String,
    secContactPreContactTime String,
    fax Long,
    address String,
    streetAddress String,
    city String,
	stateProvince String,
    country CountryEnum,
	postalCode String ,
    dot String ,
    mc Long ,
    companyLogo ImageBlob ,
    customerSince LocalDate ,
    remarks String,
    contract Blob ,
    status ToggleStatus ,
    preffredCurrency CURRENCY ,
    payterms String  ,
    timeZone ZonedDateTime
   
   }
   
 

    
entity Trip  {     
     tripNumber String,
     description String ,
     shipmentNumber String,
     bol String,
     pickup LocalDate,
	 drop LocalDate,
     pickupLocation String,
	 dropLocation String,
     currentLocation String,
     status  StatusEnum,
     detention Long,
     chasisInTime Instant,    
     pod ImageBlob,
     hazmat HAZMAT,
     recievedBy String ,
     coveredBy  COVEREDBY ,
     loadType LoadType ,
     containerSize  SizeEnum ,
     numbersOfContainer Integer ,
     comments String
     
	}
    

entity Invoice {
     orderNo String,
     taxRate Double,
     taxType TaxType,
     currency CURRENCY ,
     invoiceTaxTotal Double,
     invoiceSubTotal Double,
     invoiceTotal Double,
     invoiceDate LocalDate ,
     invoicePaidDate LocalDate ,
     payRefNo String ,
     invoiceDueDate LocalDate ,
     status  InvoiceStatus ,
     invoicePdf Blob ,
     remarks String
	
}

entity InvoiceItem {
     itemName String,
     description String,
     qty Integer,
     price Double,
     discount Double,
     total Double 
     
	}
    
  entity Accounts{
     
     balance Double,
     over30  Double,
     over60 Double ,
     over90 Double 
     
  
  }
  
   entity TransactionsRecord{
     txType TransactionType,        
     description String,
     txAmmount Double,
     txRefNo String ,
     txCreatedBy String,
     txCreatedDate LocalDate ,
     txCompletedBy String,
     txCompletedDate LocalDate ,
     status  TxStatus ,
     txDoc Blob ,
     currency CURRENCY ,
     remarks String
  
    }
    
 
entity Equipment {
enumber String ,
type EquipmentEnum ,
ownershiptype String ,
status ToggleStatus ,
vin String ,
make String ,
model String ,
description String ,
year String ,
yearPurchased String ,
licensePlateNumber String ,
licensePlateExpiration LocalDate ,
inspectionStickerExpiration  LocalDate

}



entity Insurance { 
  providerName String,
  issueDate LocalDate ,
  expiryDate LocalDate ,
  policyDocument Blob ,
  coverageStatement String 
  }

entity Contact {
	
	firstName String,
	lastName String,
    contactDesignation Designation ,
	email String,
 	phoneNumber Long ,
    remarks String ,
    preferredTime String  
    
}

entity Driver {
    company String,
	firstName String,
	lastName String,
	email String,
	phoneNumber Long,
	licenceNumber Long,
    dob LocalDate ,
    companyJoinedOn LocalDate ,
    companyLeftOn LocalDate 
    image ImageBlob ,
    licenceImage ImageBlob ,
    remarks String ,
    contractDoc Blob ,
    status ToggleStatus
    }

entity OwnerOperator {
    company String,
	firstName String,
	lastName String,
    contactDesignation Designation ,
	email String,
 	phoneNumber Long,    
    address String,
    streetAddress String,
    city String,
	stateProvince String,
    country CountryEnum,
	postalCode String ,
    dot String ,
    mc Long ,
    profileStatus ToggleStatus ,
    preffredCurrency CURRENCY
    contractDoc Blob
   }




entity Location {
	address String,
    streetAddress String,
    city String,
	stateProvince String,
    country CountryEnum,
	postalCode String
    latitude Integer,
    longitude Integer
	
}


   enum TxStatus{
    INITIATED , UNDERPROCESS , COMPLETED
    }
    enum TransactionType{
    CREDIT , PAYMENT, REFUND , ADJUSTMENT
    
    
    }
     enum PreffredContactType{
   PHONE , EMAIL, FAX, MAIL
   
   }

enum ToggleStatus   {
ACTIVE , INACTIVE

}
enum HAZMAT {
YES ,  NO
}
enum COVEREDBY {
CompanyDriver , OwnerOperator   
   }
enum CountryEnum {
    USA, CANADA, MEXICO
}
enum CURRENCY {
USD , CAD , INR

}
enum TaxType {
    GST, FEDRAL
}
enum EquipmentEnum {
    TRAILER, CONTAINER, CHASIS
}
enum SizeEnum {
   C53 , C43 , C20 
}

enum LoadType {
    REEFER , FLATBED , LTL  
}
enum StatusEnum {
    PICKEDUP, ONROAD , DELIVERED , INVOICED
}

enum InvoiceStatus {
    DRAFT, GENERATED , SENT , PAID , OVERDRAFT , VOIDED , PARTIALLY_PAID
}

enum Designation {
    MANAGER, ACCOUNTANT , OWNER , DISPATCHER
}


relationship OneToOne {
    
	// Location{customer (company)  } to Customer{billingAddress (city) }
    
   //  Customer{custInsurance (providerNumber)  } to Insurance  {customer (company)  } 
   
    OwnerOperator{operInsurance} to Insurance {OwnerOperator}
    Equipment{insurance} to Insurance 
    Accounts {customer (company)} to  Customer{ accounts } 
    Trip {pickupLocation (address)}  to Location
    Trip {dropLocation (address)}  to Location
    
}
// defining multiple OneToMany relationships with comments
relationship OneToMany {
   
	Customer{loadOrder(orderNuber)} to Trip {customer(email)}
    Customer{invoice} to Invoice {customer(company)}
    Trip{invoice} to Invoice {trip}
    Driver{trip} to  Trip {driver}
    Equipment {trip} to  Trip {equipment}
    OwnerOperator { loadOrder} to  Trip {ownerOperator}  
    Customer{morecontact (email )  } to  Contact  {customer (company)  } 
    Invoice   to  InvoiceItem { invoice  }
    Customer  to TransactionsRecord {customer (company)}
    Accounts  to TransactionsRecord {customer (company)}
   
    
}
//relationship ManyToOne {

// }
//relationship ManyToMany {
  //LoadOrder{driver} to Driver{loadOrder}
//}


// relationship OneToMany {
  
  //  BookingItem {equipment(number)}   to Equipment,
   // BookingItem {driver(firstName)}   to  Driver{bookingItem(description)}
	
// }
//relationship ManyToOne {
//  Invoice{invoiceTo} to Customer
// }


// Set pagination options
//paginate JobHistory, Employee with infinite-scroll
paginate Trip with pagination

// Use Data Transfert Objects (DTO)
// dto * with mapstruct

// Set service options to all except few
service all with serviceImpl 

// Set an angular suffix
// angularSuffix * with mySuffix
